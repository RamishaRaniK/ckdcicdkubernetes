steps:
# Step 1: Create GKE Cluster
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud container clusters create my-cluster --zone asia-southeast1-a --num-nodes 3 || echo "Cluster already exists"

# Step 2: Build Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/flask-app', '.']

# Step 3: Push Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/flask-app']

# Step 4: Get GKE Cluster Credentials
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud container clusters get-credentials my-cluster --zone asia-southeast1-a --project $PROJECT_ID

# Step 5: Verify Kubernetes Context
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Check the current Kubernetes context and cluster information
      kubectl config current-context
      kubectl cluster-info

# Step 6: Deploy to GKE
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Deploy the application
      kubectl set image deployment/flask-app flask-app=gcr.io/$PROJECT_ID/flask-app:latest || \
      kubectl create deployment flask-app --image=gcr.io/$PROJECT_ID/flask-app:latest

# Step 7: Create Ingress Resource without Host
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Create the Ingress to expose the service
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: flask-app-ingress
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
      spec:
        rules:
        - http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: flask-app
                  port:
                    number: 80
      EOF

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
  
images:
- 'gcr.io/$PROJECT_ID/flask-app'
